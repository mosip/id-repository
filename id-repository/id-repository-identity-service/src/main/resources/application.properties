auth.server.admin.issuer.uri=https://dev.mosip.net/keycloak/auth/realms/
auth.server.admin.allowed.audience=mosip-regproc-client,mosip-resident-client,mosip-ida-client,mosip-admin-client,mosip-crereq-client,mosip-creser-client

# Map to find the realm for the inputted appid to get the token from OIDC provider.
mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}

mosip.iam.adapter.clientid.id-repository=mosip-regproc-client
mosip.iam.adapter.clientsecret.id-repository=abc123
mosip.iam.adapter.appid.id-repository=regproc
mosip.authmanager.client-token-endpoint=https://dev.mosip.net/v1/authmanager/authenticate/clientidsecretkey

mosip.identity.mapping-file=https://raw.githubusercontent.com/mosip/mosip-config/develop/sandbox/identity-mapping.json
mosip.kernel.idobjectvalidator.date-format=uuuu/MM/dd
mosip.primary-language=eng
# Path to IDSchemaVersion. Path is defined as per JsonPath.compile.
mosip.kernel.idobjectvalidator.identity.id-schema-version-path=identity.IDSchemaVersion

# Path to dateOfBirth field. Path is defined as per JsonPath.compile.
mosip.kernel.idobjectvalidator.identity.dob-path = identity.dateOfBirth

# masterdata field data url
mosip.idobjectvalidator.masterdata.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/possiblevalues/{subType}

# IdObjectReferenceValidator scheduler cron job pattern to invoke cache reset
#mosip.idobjectvalidator.scheduler.reset-cache.cron-job-pattern=* * * * * 2099

# Refresh cache only once for a particular subType for each request, when a value is not found  for that subType. By default, it is false
mosip.idobjectvalidator.refresh-cache-on-unknown-value=false

mosip.idrepo.uin-generator.rest.uri=https://dev.mosip.net/v1/idgenerator/uin
mosip.idrepo.uin-generator.rest.httpMethod=GET
mosip.idrepo.uin-generator.rest.headers.mediaType=application/json
mosip.idrepo.uin-generator.rest.timeout=100

mosip.idrepo.websub.credential-status-update.topic=CREDENTIAL_STATUS_UPDATE

auth-token-generator.rest.uri=https://dev.mosip.net/v1/authmanager/authenticate/clientidsecretkey
auth-token-generator.rest.appId=regproc
auth-token-generator.rest.clientId=mosip-regproc-client
auth-token-generator.rest.secretKey=abc123
mosip.idrepo.credential-status-update-job.fixed-delay-in-ms=100
mosip.idrepo.credential.cancel-request.rest.uri=https://dev.mosip.net/v1/credentialrequest/cancel/{requestId}
mosip.idrepo.credential.cancel-request.rest.httpMethod=GET
mosip.idrepo.credential.cancel-request.rest.headers.mediaType=application/json
mosip.idrepo.credential.cancel-request.rest.timeout=10

mosip.idrepo.websub.vid-credential-update.callback-url=https://dev.mosip.net/idrepository/v1/identity/callback/vid_credential_status_update
mosip.idrepo.websub.vid-credential-update.topic=VID_CRED_STATUS_UPDATE
mosip.idrepo.websub.vid-credential-update.secret=8cee1868024e9c525f44b977b31b8b70a9ba510f85dc9d4bab1491c9b2b96da9


mosip.credential.service.share.prependThumbprint=false

mosip.idrepo.objectstore.bucket-name=idrepo
mosip.idrepo.objectstore.adapter-name=s3Adapter
websub.hub.url=http://0.0.0.0:9000/hub
websub.publish.url=http://0.0.0.0:9000/hub

mosip.kernel.idobjectvalidator.locationhierarchy.mapping.0=Country
mosip.kernel.idobjectvalidator.locationhierarchy.mapping.1=province
mosip.kernel.idobjectvalidator.locationhierarchy.mapping.2=City
mosip.kernel.idobjectvalidator.locationhierarchy.mapping.3=Barangay
mosip.kernel.idobjectvalidator.locationhierarchy.mapping.4=postalCode
#mosip.kernel.idobjectvalidator.locationhierarchy.mapping.5=postalCode

mosip.mandatory-languages=eng
mosip.optional-languages=ara,fra

mosip.idrepo.crypto.refId.uin=uin
mosip.idrepo.crypto.refId.uin-data=identity_data
mosip.idrepo.crypto.refId.demo-doc-data=demographic_data
mosip.idrepo.crypto.refId.bio-doc-data=biometric_data

server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=1m

kernel.retry.attempts.limit=5
# The initial interval to be used for exponential backoff in milli seconds. If the exponential backoff is disabled by setting 'kernel.retry.exponential.backoff.multiplier' value as 1, this initial interval will be used as the fixed backoff interval for every retries. Default value is 200 millisecs
kernel.retry.exponential.backoff.initial.interval.millisecs=100
# The multiplier for exponential backoff intreval. A double value greater than or equal to 1. Setting to 1 will make it to fixed backoff, more than 1 will apply exponential backoff. Default is 1.0 (fixed backoff). For exponential backoff the suggested value is 1.5 or 2. The next backoff interval is calculated with the formula: NextBackOffInterval = initialInterval * Math.pow(multiplier, retryCount)
kernel.retry.exponential.backoff.multiplier=1.5
kernel.retry.exponential.backoff.max.interval.millisecs=1000
# Whether to traverse to the root cause exception from the exception thrown and use the same root cause to decide whether to retry or not. Default is true.
kernel.retry.traverse.root.cause.enabled=false
#Comma separated List of fully qualified Exceptions which are retryable (inclusion list)
kernel.retry.retryable.exceptions=io.mosip.idrepository.core.exception.IdRepoRetryException
#Comma separated List of fully qualified Exceptions which are not-retryable (exclusion list)
kernel.retry.nonretryable.exceptions=
#---------------------------------------Common properties-----------------------

# The below needs to be overwritten during installation. This is just a placeholder
#mosipbox_public_url=https://<domain name>
mosipbox.public.url=${mosipbox_public_url}

# Value used in IdObjectReferenceValidator when location is not available
mosip.kernel.idobjectvalidator.masterdata.locations.locationNotAvailable=NA

# Masterdata apis used to retreive data for IdObjectReferenceValidator
mosip.masterdata.base.url = https://dev.mosip.net
# Commenting/removing below property will disable all masterdata validations as supported languages are required for all other validations
mosip.kernel.idobjectvalidator.masterdata.languages.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/languages

# commenting/removing below property will disable Gender masterdata validation
mosip.kernel.idobjectvalidator.masterdata.gendertypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/gendertypes

# commenting/removing below properties will disable Document Type masterdata validation
mosip.kernel.idobjectvalidator.masterdata.documentcategories.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/documentcategories
mosip.kernel.idobjectvalidator.masterdata.documenttypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/documenttypes/{documentcategorycode}/{langcode}

# commenting/removing below properties will disable location and location hierarchy masterdata validations
mosip.kernel.idobjectvalidator.masterdata.locations.rest.uri=http://localhost:8086/v1/masterdata/locations/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locationhierarchy.rest.uri=http://localhost:8086/v1/masterdata/locations/locationhierarchy/{hierarchyname}

# commenting/removing below properties will disable individualtype/resident status masterdata validations
#mosip.kernel.idobjectvalidator.masterdata.individualtypes.rest.uri=${mosip.masterdata.base.url}/v1/masterdata/individualtypes

# --------- Properties that needs to be updated when Identity Schema has been updated ---------------#
# Mandatory attributes used by IdObjectSchemaValidator. These values needs to be updated when Identity schema is updated.
mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone
mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.update-uin=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.pre-registration.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.pre-registration.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-client.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-client.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber,parentOrGuardianName,parentOrGuardianRID|parentOrGuardianUIN,parentOrGuardianBiometrics
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber,parentOrGuardianName,parentOrGuardianRID|parentOrGuardianUIN,parentOrGuardianBiometrics
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.other=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.lost=IDSchemaVersion

# Bio attribute allowed to be stored in IDRepo as per Identity Schema
mosip.idrepo.identity.allowedBioAttributes=individualBiometrics

# List of all bio attriutes defined in Identity Schema
mosip.idrepo.identity.bioAttributes=individualBiometrics,parentOrGuardianBiometrics
#----------------------------------------------------------------------------------------------------#

# Application IDs
mosip.prereg.app-id=PRE_REGISTRATION
mosip.reg.app-id=REGISTRATION
mosip.regproc.app-id=REGISTRATION_PROCESSOR
mosip.ida.app-id=IDA
mosip.ida.ref-id=INTERNAL
mosip.idrepo.app-id=ID_REPO

# UTC ISO Date Time Pattern
mosip.utc-datetime-pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.sign.header=response-signature
mosip.signed.response.header=response-signature

#----------------------- CBEFF Util--------------------------------------------------
# Cbeff URL where the files will be stored in git, change it accordingly in case of change of storage location.
mosip.kernel.xsdstorage-uri=https://raw.githubusercontent.com/mosip/mosip-config/develop/sandbox/
# Cbeff XSD file name in config server
mosip.kernel.xsdfile=mosip-cbeff.xsd

#----------------------------- Applicant Type --------------------------------------------------
mosip.kernel.applicant.type.age.limit = 5

#----------------------------- Static PIN --------------------------------------------------
mosip.kernel.pin.length=6

#-----------------------------TspId -----------------------------------------------
#length of the Tsp id
mosip.kernel.tspid.length=4

#-----------------------------partnerId -----------------------------------------------
#length of the partner id
mosip.kernel.partnerid.length=4

#-----------------------------TOKEN-ID Properties---------------------------------
#length of the token id
mosip.kernel.tokenid.length=36

#-----------------------------Registration Center Id -----------------------------------------------
#length of the registration center id
mosip.kernel.registrationcenterid.length=5

#-----------------------------Machine Id -----------------------------------------------
#length of the machine id
mosip.kernel.machineid.length=5

#-----------------------------RID Properties---------------------------------------
# length of the rid
mosip.kernel.rid.length=29
# length of the timestamp
mosip.kernel.rid.timestamp-length=14
# rid sequence max digits
mosip.kernel.rid.sequence-length=5

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
mosip.kernel.tokenid.sequence-limit=3

#-----------------------------PRID Properties------------------------------------
#prid-length
mosip.kernel.prid.length=14

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
#to disable validation assign zero or negative value
mosip.kernel.prid.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
#to disable validation assign zero or negative value
mosip.kernel.prid.repeating-block-limit=3


# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit) to disable validation assign zero or negative value
mosip.kernel.prid.repeating-limit=2

# list of number that id should not be start with to disable null
mosip.kernel.prid.not-start-with=0,1

#restricted numbers for prid
mosip.kernel.prid.restricted-numbers=786,666


#-----------------------------VID Properties--------------------------------------
# length of the vid
mosip.kernel.vid.length=16

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 0 or negative value
mosip.kernel.vid.length.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
# to disable repeating block validation assign 0 or negative value
mosip.kernel.vid.length.repeating-block-limit=2


# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.vid.length.repeating-limit=2

# list of number that id should not be start with
# to disable null
mosip.kernel.vid.not-start-with=0,1

#restricted numbers for vid
mosip.kernel.vid.restricted-numbers=786,666

#-----------------------------UIN Properties--------------------------------------
#length of the uin
mosip.kernel.uin.length=10
#minimum threshold of unused uin
mosip.kernel.uin.min-unused-threshold=200000
#number of uins to generate
mosip.kernel.uin.uins-to-generate=500000
#restricted numbers for uin
mosip.kernel.uin.restricted-numbers=786,666

# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 0 or negative value
mosip.kernel.uin.length.sequence-limit=3

# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
#to disable validation assign zero or negative value
mosip.kernel.uin.length.repeating-block-limit=2

# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.uin.length.repeating-limit=2

#reverse group digit limit for uin filter
mosip.kernel.uin.length.reverse-digits-limit=5

#group digit limit for uin filter
mosip.kernel.uin.length.digits-limit=5

#should not start with
mosip.kernel.uin.not-start-with=0,1

#adjacent even digit limit for uin filter
mosip.kernel.uin.length.conjugative-even-digits-limit=3



#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=https://dev.mosip.net/v1/authmanager/authorize/admin/validateToken
mosip.keycloak.base-url=http://keycloak
mosip.keycloak.issuerUrl=${mosip.keycloak.base-url}/auth/realms/mosip
auth-token-generator.rest.issuerUrl=${mosip.keycloak.issuerUrl}

#----------------------- Crypto --------------------------------------------------
#Crypto asymmetric algorithm name
mosip.kernel.crypto.asymmetric-algorithm-name=RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING
#Crypto symmetric algorithm name
mosip.kernel.crypto.symmetric-algorithm-name=AES/GCM/PKCS5Padding
#Keygenerator asymmetric algorithm name
#Asymmetric algorithm key length
mosip.kernel.keygenerator.asymmetric-key-length=2048
#Symmetric algorithm key length
mosip.kernel.keygenerator.symmetric-key-length=256
#Keygenerator symmetric algorithm name
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
# keygenerator asymmetric algorithm name
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
#Encrypted data and encrypted symmetric key separator
mosip.kernel.data-key-splitter=#KEY_SPLITTER#
#GCM tag length
mosip.kernel.crypto.gcm-tag-length=128
#Hash algo name
mosip.kernel.crypto.hash-algorithm-name=PBKDF2WithHmacSHA512
#Symmtric key length used in hash
mosip.kernel.crypto.hash-symmetric-key-length=256
#No of iterations in hash
mosip.kernel.crypto.hash-iteration=100000
#Sign algo name
mosip.kernel.crypto.sign-algorithm-name=RS256

mosip.keymanager.base.url=https://dev.mosip.net
mosip.kernel.keymanager-service-publickey-url=${mosip.keymanager.base.url}/v1/keymanager/publickey/{applicationId}
mosip.kernel.keymanager-service-decrypt-url=${mosip.keymanager.base.url}/v1/keymanager/decrypt
mosip.kernel.keymanager-service-auth-decrypt-url=${mosip.keymanager.base.url}/v1/keymanager/auth/decrypt
mosip.kernel.keymanager-service-sign-url=${mosip.keymanager.base.url}/v1/keymanager/sign
mosip.kernel.keymanager.cert.url=${mosip.keymanager.base.url}/v1/keymanager/getCertificate
mosip.sign.applicationid=KERNEL
mosip.sign.refid=SIGN
mosip.kernel.cryptomanager.request_id=CRYPTOMANAGER.REQUEST
mosip.kernel.cryptomanager.request_version=v1.0
mosip.kernel.signature.signature-request-id=SIGNATURE.REQUEST
mosip.kernel.signature.signature-version-id=v1.0



#----------------------------------ID Repo------------------------------------------

#---------------------------------------otp manager service-------------------------------
#the default length for otp(in number)
mosip.kernel.otp.default-length=6
#the default crypto function
#It can be: HmacSHA512, HmacSHA256, HmacSHA1.
mosip.kernel.otp.mac-algorithm=HmacSHA512
#the OTP expires after the given time(in seconds).
mosip.kernel.otp.expiry-time=180
#the key is freezed for the given time(in seconds).
mosip.kernel.otp.key-freeze-time=1800
#the number of validation attempts allowed(in number).
#mosip.kernel.otp.validation-attempt-threshold =3 means , the validation and generation will be blocked from 4th time.
mosip.kernel.otp.validation-attempt-threshold=10
#minimum length of key(in number).
mosip.kernel.otp.min-key-length=3
#maximum length of key(in number).
mosip.kernel.otp.max-key-length=64


#--------------------------------------Licensekeymanager  Service--------------------------------------
#the license key length.
mosip.kernel.licensekey.length=16
#List of permissions
# NOTE: ',' in the below list is used as splitter in the implementation. 
# Use of ',' in the values for below key should be avoided.
# Use of spaces before and after ',' also should be avoided.
mosip.kernel.licensekey.permissions=OTP Trigger,OTP Authentication,Demo Authentication - Identity Data Match,Demo Authentication - Address Data Match,Demo Authentication - Full Address Data Match,Demo Authentication - Secondary Language Match,Biometric Authentication - FMR Data Match,Biometric Authentication - IIR Data Match,Biometric Authentication - FID Data Match,Static Pin Authentication,eKYC - limited,eKYC - Full,eKYC - No



#-----------------------------Virus Scanner--------------------------------------
# Here we specify the Kubernetes service name, as clamav runs in the same cluster
mosip.kernel.virus-scanner.host=clamav 
mosip.kernel.virus-scanner.port=80

#-------------------------------FS Adapter- HDFS -------------------------------
mosip.kernel.fsadapter.hdfs.name-node-url=hdfs://hadoop-hdfs-nn:9000
mosip.kernel.fsadapter.hdfs.authentication-enabled=false
# If HDFS is security is configured with Kerberos, Key Distribution Center domain
mosip.kernel.fsadapter.hdfs.kdc-domain=HDFSKERBEROS1.SOUTHINDIA.CLOUDAPP.AZURE.COM
# HDFS log level. Change this to debug to see hdfs logs
logging.level.org.apache.hadoop=warn
mosip.kernel.fsadapter.hdfs.keytab-file=classpath:mosip.keytab



#------------------------Transliteration-----------------------------------------------
mosip.kernel.transliteration.arabic-language-code=ara
mosip.kernel.transliteration.franch-language-code=fra



#-------Registration processor Notification types------------
mosip.registration.processor.notification.types=EMAIL


mosip.default.dob.month=01
mosip.default.dob.day=01
mosip.login.mode= email,mobile


#---Language orientation-----
mosip.right_to_left_orientation=ara
mosip.left_to_right_orientation=eng,fra


#**************** Notification Type *************
mosip.notificationtype=SMS|EMAIL
mosip.kernel.sms.proxy-sms=true
mosip.kernel.auth.proxy-otp=true
mosip.kernel.auth.proxy-email=true
#******** Notification lanugage types - either PRIMARY or BOTH ********
mosip.notification.language-type=BOTH


#-------------------System---------------
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

#-------------------Admin---------------
mosip.min-digit-longitude-latitude=4
mosip.kernel.filtervalue.max_columns=20

auth.server.admin.validate.url=https://dev.mosip.net/v1/authmanager/authorize/admin/validateToken

#------------------PDF Genration-----------------------------------------
mosip.kernel.pdf_owner_password=6cbd7358f7a821132862475c16cf48e575c8e2c5f994fa7140ee08f364015b24
#------------------Quality Check-----------------------------------------
#Quality threshold for applicant iris
mosip.iris_threshold=0
#Quality threshold for applicant leftslap fingerprint
mosip.leftslap_fingerprint_threshold=0
#Quality threshold for applicant rightslap fingerprint
mosip.rightslap_fingerprint_threshold=0
#Quality threshold for applicant thumbs fingerprint
mosip.thumbs_fingerprint_threshold=0
#Quality threshold for applicant face
mosip.facequalitythreshold=0
#Bio SDK Integration
mosip.fingerprint.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.face.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.iris.provider=io.mosip.kernel.bioapi.impl.BioApiImpl

#-------UIN Alias-------------------
mosip.uin.alias=

#---------------------------------kernel Salt Generator---------------------------------------------------#
mosip.kernel.salt-generator.chunk-size=10
mosip.kernel.salt-generator.start-sequence=0
mosip.kernel.salt-generator.end-sequence=999
#----------------------------------------------------------------------------------------------------------#
server.max-http-header-size=10000000

mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}

#---------------------------------prometheus : Metrics related configurations---------------------------------------------------#
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

mosip.kernel.syncdata-service-idschema-url=https://dev.mosip.net/v1/masterdata/idschema/latest
mosip.kernel.syncdata-service-dynamicfield-url=${mosip.masterdata.base.url}/v1/masterdata/dynamicfields
mosip.kernel.keymanager-service-validate-url=${mosip.keymanager.base.url}/v1/keymanager/validate

# ------------ GPS settings ---------

mosip.registration.gps_device_enable_flag=n


# ------------- Packet manager ----------------------
mosip.commons.packetnames=id,evidence,optional
# reader
provider.packetreader.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|CORRECTION|ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketReaderImpl
# writer
provider.packetwriter.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|CORRECTION|ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketWriterImpl
objectstore.adapter.name=S3Adapter
# can be OnlinePacketCryptoServiceImpl OR OfflinePacketCryptoServiceImpl
objectstore.crypto.name=OnlinePacketCryptoServiceImpl
default.provider.version=v1.0
# posix adapter config
object.store.base.location=/home
#-------------S3adapter-------------------
# s3 adapter config
object.store.s3.accesskey=admin
object.store.s3.secretkey=minio123
object.store.s3.url=https://dev.mosip.net
object.store.s3.region=
object.store.s3.readlimit=10000000

# swift adapter config
object.store.swift.username=test
object.store.swift.password=test

packet.manager.account.name=PACKET_MANAGER_ACCOUNT
CRYPTOMANAGER_DECRYPT=${mosip.keymanager.base.url}/v1/keymanager/decrypt
CRYPTOMANAGER_ENCRYPT=${mosip.keymanager.base.url}/v1/keymanager/encrypt
IDSCHEMAURL=${mosip.masterdata.base.url}/v1/masterdata/idschema/latest
AUDIT_URL=http://kernel-auditmanager-service/v1/auditmanager/audits
packet.default.source=id
schema.default.fieldCategory=pvt,none

# device registration/deregistration config
mosip.stage.environment=Developer

# log level
logging.level.root=WARN
logging.level.io.mosip=INFO
logging.level.io.vertx=DEBUG
logging.level.io.mosip.kernel.auth.defaultadapter.filter=INFO

#iam adapter
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter

# tomcat access logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.buffered=false
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=
server.tomcat.accesslog.pattern={"@timestamp":"%{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}t","level":"ACCESS","level_value":70000,"traceId":"%{X-B3-TraceId}i","statusCode":%s,"req.requestURI":"%U","bytesSent":%b,"timeTaken":%T,"appName":"${spring.application.name}"}
server.tomcat.accesslog.className=io.mosip.kernel.core.logger.config.SleuthValve

management.endpoint.restart.enabled=true

#----------------------------------ID Repo dynamic properties----------------------------------------------#

# IDRepo database url
mosip.idrepo.db.url=dev.mosip.net

# IDRepo database port
mosip.idrepo.db.port=30090

#IDRepo identity service database name
mosip.idrepo.db.identity.db-name=mosip_idrepo

#IDRepo identity service database username
mosip.idrepo.db.identity.username=idrepouser

#IDRepo database password (encrypted)
mosip.idrepo.db.identity.password=mosip123

#IDRepo VID service database name
mosip.idrepo.db.vid.db-name=mosip_idmap

#IDRepo VID service database username
mosip.idrepo.db.vid.username=idmapuser

#IDRepo VID service database password (encrypted)
mosip.idrepo.db.vid.password=mosip123

#IDRepo ObjectStore account name
mosip.idrepo.objectstore.account-name=idrepo

#----------------------------------ID Repo Service---------------------------------------------------------#

# Application name using for auditing
mosip.idrepo.application.name=ID-Repository

# Application version validation in ID-Repo requests
mosip.idrepo.application.version.pattern=^v\\d+(\\.\\d+)?$

# Modulo value used to evaluate expression (UIN % modulo) used to get the salt from salt table 
mosip.idrepo.modulo-value=1000

# Configuration for +/- time period adjustment in minutes for the request time validation, so that 
#the requests originating from a system that is not in time-sync will be accepted for the time period
mosip.idrepo.datetime.future-time-adjustment=2

#----------------------------------ID Repo Identity Service------------------------------------------------#

# Application version expected in the request
mosip.idrepo.identity.application.version=v1

# Application ids expected in the requests
mosip.idrepo.identity.id.create=mosip.id.create
mosip.idrepo.identity.id.read=mosip.id.read
mosip.idrepo.identity.id.update=mosip.id.update

#database mappings for identity service
mosip.idrepo.identity.db.url=jdbc:postgresql://${mosip.idrepo.db.url}:${mosip.idrepo.db.port}/${mosip.idrepo.db.identity.db-name}
mosip.idrepo.identity.db.username=${mosip.idrepo.db.identity.username}
mosip.idrepo.identity.db.password=${mosip.idrepo.db.identity.password}
mosip.idrepo.identity.db.driverClassName=org.postgresql.Driver

# Path of UIN expected in the input idrepo request. This path is based on Identity schema.
mosip.idrepo.identity.json.path=identity.UIN

# UIN status value which is stored in database for newly inserted UIN/active UINs.
mosip.idrepo.identity.uin-status.registered=ACTIVATED

# List of allowed UIN status in ID-Repo 
mosip.idrepo.identity.uin-status=ACTIVATED,BLOCKED,DEACTIVATED 

#-----------------------ID Repo Identity Service - idobjectvalidator---------------------------------------#

# Class name of the referenceValidator
#mosip.kernel.idobjectvalidator.referenceValidator=io.mosip.kernel.idobjectvalidator.impl.IdObjectReferenceValidator 

#-----------------------ID Repo WEB SUB configuration----------------------------------------------------#
# Web Sub publisher url
kernel.websub.publisher.url=http://0.0.0.0:9000/websub/publish

#----------------------------------ID Repo VID Service-----------------------------------------------------#
# Application version expected in the request
mosip.idrepo.vid.application.version=v1

# Application ids expected in the requests
mosip.idrepo.vid.id.create=mosip.vid.create
mosip.idrepo.vid.id.read=mosip.vid.read
mosip.idrepo.vid.id.update=mosip.vid.update
mosip.idrepo.vid.id.regenerate=mosip.vid.regenerate 
mosip.idrepo.vid.id.reactivate=mosip.vid.reactivate
mosip.idrepo.vid.id.deactivate=mosip.vid.deactivate

# Database mapping for VID service
mosip.idrepo.vid.db.url=jdbc:postgresql://${mosip.idrepo.db.url}:${mosip.idrepo.db.port}/${mosip.idrepo.db.vid.db-name}
mosip.idrepo.vid.db.username=${mosip.idrepo.db.vid.username}
mosip.idrepo.vid.db.password=${mosip.idrepo.db.vid.password}
mosip.idrepo.vid.db.driverClassName=org.postgresql.Driver

# VID status value which is stored in database for newly inserted VID/active VIDs.
mosip.idrepo.vid.active-status=ACTIVE

# VID status for which unlimited txn is not allowed
mosip.idrepo.vid.unlimited-txn-status=USED

# VID status which are allowed for VID regeneration
mosip.idrepo.vid.regenerate.allowed-status=ACTIVE,REVOKED,EXPIRED,USED

# List of allowed VID status in ID-Repo 
mosip.idrepo.vid.allowedstatus=ACTIVE,REVOKED,EXPIRED,USED,INVALIDATED,DEACTIVATED

# VID status value which is stored in database for deactivated VIDs. Used in deactivate-all-vids api.
mosip.idrepo.vid.deactive-status=DEACTIVATED

# VID status value which is stored in database for reactivated VIDs. Used in reactivate-all-vids api.
mosip.idrepo.vid.reactive-status=ACTIVE

# Config server url
mosip.idrepo.vid.mosip-config=${spring.cloud.config.uri}/${spring.application.name}/${spring.profiles.active}/${spring.cloud.config.label}/

# VID policy schema against which VID policy is validated
mosip.idrepo.vid.policy-schema-url=${mosip.idrepo.vid.mosip-config}mosip-vid-policy-schema.json

# VID policy based on which VID is created
mosip.idrepo.vid.policy-file-url=${mosip.idrepo.vid.mosip-config}mosip-vid-policy.json

#----------------------------------REST-services ----------------------------------------------------------#
mosip.idrepo.audit.rest.uri=https://dev.mosip.net/v1/auditmanager/audits
mosip.idrepo.audit.rest.httpMethod=POST
mosip.idrepo.audit.rest.headers.mediaType=application/json

mosip.idrepo.encryptor.rest.uri=https://dev.mosip.net/v1/keymanager/encrypt
mosip.idrepo.encryptor.rest.httpMethod=POST
mosip.idrepo.encryptor.rest.headers.mediaType=application/json
mosip.idrepo.encryptor.rest.timeout=100

mosip.idrepo.decryptor.rest.uri=https://dev.mosip.net/v1/keymanager/decrypt
mosip.idrepo.decryptor.rest.httpMethod=POST
mosip.idrepo.decryptor.rest.headers.mediaType=application/json
mosip.idrepo.decryptor.rest.timeout=100

mosip.idrepo.vid-service.rest.uri=https://dev.mosip.net/idrepository/v1/vid/uin/{uin}
mosip.idrepo.vid-service.rest.httpMethod=GET
mosip.idrepo.vid-service.rest.headers.mediaType=application/json
mosip.idrepo.vid-service.rest.timeout=100

mosip.idrepo.retrieve-uin-by-vid.rest.uri=https://dev.mosip.net/idrepository/v1/vid/{vid}
mosip.idrepo.retrieve-uin-by-vid.rest.httpMethod=GET
mosip.idrepo.retrieve-uin-by-vid.rest.headers.mediaType=application/json
mosip.idrepo.retrieve-uin-by-vid.rest.timeout=100

mosip.idrepo.bio-extractor-service.rest.uri=https://dev.mosip.net/v1/bioextractor/{extractionFormat}/extracttemplates
mosip.idrepo.bio-extractor-service.rest.httpMethod=POST
mosip.idrepo.bio-extractor-service.rest.headers.mediaType=application/json
mosip.idrepo.bio-extractor-service.rest.timeout=100

mosip.idrepo.syncdata-service.rest.uri=https://dev.mosip.net/v1/masterdata/idschema/latest
mosip.idrepo.syncdata-service.rest.httpMethod=GET
mosip.idrepo.syncdata-service.rest.headers.mediaType=application/json
mosip.idrepo.syncdata-service.rest.timeout=100

mosip.idrepo.pmp.partner.rest.uri=https://dev.mosip.net/v1/partnermanager/partners?partnerType=Online_Verification_Partner
mosip.idrepo.pmp.partner.rest.httpMethod=GET
mosip.idrepo.pmp.partner.rest.headers.mediaType=application/json
mosip.idrepo.pmp.partner.rest.timeout=10

mosip.idrepo.credential.request.rest.uri=http://localhost:8094/v1/credentialrequest/requestgenerator
mosip.idrepo.credential.request.rest.httpMethod=POST
mosip.idrepo.credential.request.rest.headers.mediaType=application/json
mosip.idrepo.credential.request.rest.timeout=10

mosip.idrepo.retrieve-by-uin.rest.uri=https://dev.mosip.net/idrepository/v1/identity/idvid/{uin}
mosip.idrepo.retrieve-by-uin.rest.httpMethod=GET
mosip.idrepo.retrieve-by-uin.rest.headers.mediaType=application/json
mosip.idrepo.retrieve-by-uin.rest.timeout=100

mosip.idrepo.vid-generator.rest.uri=https://dev.mosip.net/v1/idgenerator/vid
mosip.idrepo.vid-generator.rest.httpMethod=GET
mosip.idrepo.vid-generator.rest.headers.mediaType=application/json
mosip.idrepo.vid-generator.rest.timeout=100

mosip.idrepo.draft-vid.rest.uri=https://dev.mosip.net/idrepository/v1/draft/vid
mosip.idrepo.draft-vid.rest.httpMethod=POST
mosip.idrepo.draft-vid.rest.headers.mediaType=application/json
mosip.idrepo.draft-vid.rest.timeout=100

mosip.idrepo.update-vid.rest.uri=https://dev.mosip.net/idrepository/v1/vid/{vid}
mosip.idrepo.update-vid.rest.httpMethod=PATCH
mosip.idrepo.update-vid.rest.headers.mediaType=application/json
mosip.idrepo.update-vid.rest.timeout=100

mosip.idrepo.draft-vid.default-type-to-create=PERPETUAL

#--------------------------Credential-Request-Generator properties-----------------------------------#

#database mappings Credential-Request-Generator
mosip.credential.service.database.hostname=postgres
mosip.credential.service.database.port=80
mosip.credential.service.jdbc.url=jdbc:postgresql://${mosip.credential.service.database.hostname}:${mosip.credential.service.database.port}/mosip_credential?currentSchema=credential
mosip.credential.service.jdbc.user=credentialuser
mosip.credential.service.jdbc.password=mosip123
mosip.credential.service.jdbc.driver=org.postgresql.Driver
hibernate.hbm2ddl.auto=update
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.show_sql=false

#Token generator properties Credential request generator
credential.request.token.request.appid=crereq
credential.request.token.request.clientId=mosip-crereq-client
credential.request.token.request.secretKey=mosip123
credential.request.token.request.version=1.0
credential.request.token.request.id=io.mosip.credentialrequestgenerator
credential.request.token.request.issuerUrl=http://keycloak/auth/realms/mosip
mosip.credential.request.service.id=mosip.credential.request.generator
mosip.credential.request.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.credential.request.service.version=1.0

#---------------Batch job properties----------------------------------#
#batch job time intervel in miliseconds
mosip.credential.request.job.timeintervel=60000

#----------------------------------REST-services ----------------------------------------------------------#
CRDENTIALSERVICE=http://idrepo-credential-service/v1/credentialservice/issue
WEBSUBSUBSCRIBEURL=http://13.232.228.161:9191/websub/hub
WEBSUBSECRET=test
CALLBACKURL=${mosipbox.public.url}/v1/credentialrequest/callback/notifyStatus

#--------------------------Credential-Request-Generator properties ends-----------------------------------#

#--------------------------Credential-Service properties--------------------------------------------------#

#Token generator properties Credential Service
credential.service.token.request.appid=creser
credential.service.token.request.clientId=mosip-creser-client
credential.service.token.request.secretKey=mosip123
credential.service.token.request.id=io.mosip.credentialstore

#Credential formatter properties Credential Service
mosip.credential.vc.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss'Z'
mosip.credential.service.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.credential.service.service.id=mosip.credential.store
mosip.credential.service.service.version=1.0
credential.service.credentialtype.file=CredentialType.json
credential.service.mvel.file=credentialdata.mvel
credential.service.dob.format=yyyy/MM/dd
mosip.credential.service.type.name=mosip
mosip.credential.service.type.namespace=mosip
credentialType.formatter.AUTH=IdAuthProvider
credentialType.formatter.QRCODE=QrCodeProvider
credentialType.formatter.MOSIP=CredentialProvider
credentialType.policyid.AUTH=189129
credentialType.policyid.QRCODE=263997
credentialType.policyid.MOSIP=189129
mosip.credential.service.format.id=http://mosip.io/credentials/
mosip.credential.service.format.issuer=https://mosip.io/issuers/
mosip.credential.service.application.id=CREDENTIAL_SERVICE
#----------------------------------REST-services ----------------------------------------------------------#
IDREPOGETIDBYID=http://idrepo-identity-service/idrepository/v1/identity/idvid
CREATEDATASHARE=http://datashare-service/v1/datashare/create
KEYBASEDTOKENAPI=http://kernel-auth-service/v1/authmanager/authenticate/clientidsecretkey
KEYMANAGER_SIGN=http://kernel-keymanager-service/v1/keymanager/sign
KEYMANAGER_ENCRYPT_PIN=http://kernel-keymanager-service/v1/keymanager/encryptWithPin
KEYMANAGER_ENCRYPT_ZK=http://kernel-keymanager-service/v1/keymanager/zkEncrypt
PARTNER_POLICY=http://pms-policy-management-service/partnermanagement/v1/policies/policies/partnerId/{partnerId}/policyId/{policyId}
PARTNER_EXTRACTION_POLICY=http://pms-partner-service/partnermanagement/v1/partners/partners/partnerId/{partnerId}/policyId/{policyId}
KEYMANAGER_GET_CERTIFICATE=http://kernel-keymanager-service/v1/keymanager/getCertificate
KEYMANAGER_UPLOAD_OTHER_DOMAIN_CERTIFICATE=http://kernel-keymanager-service/v1/keymanager/uploadOtherDomainCertificate
GET_PARTNER_CERTIFICATE=http://pms-partner-service/partnermanagement/v1/partners/partners/getPartnerCertificate/{partnerId}
credential.service.token.request.issuerUrl=http://keycloak/auth/realms/mosip



#--------------------------Credential-Service properties ends--------------------------------------------------#

#--------------------------Bio SDK Integration - Bio extractor Service ----------------------------------------#
mosip.biometric.sdk.provider.finger.classname=io.mosip.mock.sdk.impl.SampleSDK
mosip.biometric.sdk.provider.finger.version=0.9

mosip.biometric.sdk.provider.iris.classname=io.mosip.mock.sdk.impl.SampleSDK
mosip.biometric.sdk.provider.iris.version=0.9

mosip.biometric.sdk.provider.face.classname=io.mosip.mock.sdk.impl.SampleSDK
mosip.biometric.sdk.provider.face.version=0.9

#------

id-repo-websub-hub-url=http://13.232.228.161:9191/websub/publish
id-repo-ida-event-type-namespace=mosip
id-repo-ida-event-type-name=ida

mosip.kernel.tokenid.uin.salt=zHuDEAbmbxiUbUShgy6pwUhKh9DE0EZn9kQDKPPKbWscGajMwf
mosip.kernel.tokenid.partnercode.salt=yS8w5Wb6vhIKdf1msi4LYTJks7mqkbmITk2O63Iq8h0bkRlD0d

mosip.role.idrepo.credentialrequest.postrequestgenerator=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.getcancelrequestid=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.getgetrequestid=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.getgetrequestids=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.putretriggerrequestid=CREDENTIAL_REQUEST

mosip.role.idrepo.credentialservice.postissue=CREDENTIAL_REQUEST

mosip.role.idrepo.identity.postidrepo=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.getidvidid=REGISTRATION_PROCESSOR,RESIDENT,REGISTRATION_ADMIN,REGISTRATION_SUPERVISOR,REGISTRATION_OFFICER,ID_AUTHENTICATION
mosip.role.idrepo.identity.patchidrepo=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.getauthtypesstatusindividualidtypeindividualid=RESIDENT
mosip.role.idrepo.identity.postauthtypesstatus=RESIDENT
mosip.role.idrepo.identity.postdraftcreateregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.patchdraftupdateregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.getdraftpublishregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.deletedraftdiscardregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.draftregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.getdraftregistrationId=REGISTRATION_PROCESSOR
mosip.role.idrepo.identity.putdraftextractbiometricsregistrationId=REGISTRATION_PROCESSOR

mosip.role.idrepo.vid.postvid=RESIDENT,REGISTRATION_PROCESSOR
mosip.role.idrepo.vid.getvid=REGISTRATION_PROCESSOR,ID_AUTHENTICATION,RESIDENT
mosip.role.idrepo.vid.getviduin=REGISTRATION_PROCESSOR
mosip.role.idrepo.vid.patchvid=ID_AUTHENTICATION,REGISTRATION_PROCESSOR
mosip.role.idrepo.vid.postvidregenerate=RESIDENT
mosip.role.idrepo.vid.postviddeactivate=RESIDENT
mosip.role.idrepo.vid.postvidreactivate=RESIDENT
mosip.role.idrepo.vid.postdraftvid=REGISTRATION_PROCESSOR