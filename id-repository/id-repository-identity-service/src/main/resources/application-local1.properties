logging.level.root=INFO
mosip.kernel.uin.salt=x8KdCQjPpgXSLegX
mosip.kernel.partnercode.salt=f10EuWN2ijBfcPV7

mosip.api.public.host=api.dev2.mosip.net
mosip.api.internal.host=api-internal.dev2.mosip.net
mosip.api.internal.url=https://${mosip.api.internal.host}
idrepo.websub.vid.credential.update.secret=PdeIM9iCDUoexmTC
idrepo.websub.remove.id.status.secret=2VcGtAXOwSCPWMtK
keycloak.internal.url=https://iam.dev2.mosip.net
keycloak.external.host=https://iam.dev2.mosip.net
keycloak.external.url=https://iam.dev2.mosip.net
mosip.resident.host=resident.dev2.mosip.net
mosip.idp.host=idp.dev2.mosip.net
mosip.prereg.host=prereg.dev2.mosip.net
mosip.esignet.host=esignet.dev2.mosip.net

javax.persistence.jdbc.user=postgres
mosip.resident.database.hostname=172.31.26.66
mosip.idrepo.db.url=172.31.26.66
mosip.credential.service.database.hostname=172.31.26.66
db.dbuser.password=0aALxlfq8n
spring.jpa.hibernate.ddl-auto=none
hibernate.hbm2ddl.auto=none
hibernate.show_sql=true
spring.jpa.show-sql=true
hibernate.dialect=org.hibernate.dialect.PostgreSQL92Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL92Dialect
javax.persistence.jdbc.driver=org.postgresql.Driver
hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
hibernate.jdbc.lob.non_contextual_creation = true
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter

s3.accesskey=
s3.secretkey=
s3.region=

## Common properties used across different modules
mosipbox.public.url=${mosip.api.internal.url}
mosip.kernel.authmanager.url=${mosipbox.public.url}
mosip.kernel.masterdata.url=${mosipbox.public.url}
mosip.kernel.keymanager.url=${mosipbox.public.url}
mosip.kernel.auditmanager.url=${mosipbox.public.url}
mosip.kernel.notification.url=${mosipbox.public.url}
mosip.kernel.idgenerator.url=${mosipbox.public.url}
mosip.kernel.otpmanager.url=${mosipbox.public.url}
mosip.kernel.syncdata.url=${mosipbox.public.url}
mosip.kernel.pridgenerator.url=${mosipbox.public.url}
mosip.kernel.ridgenerator.url=${mosipbox.public.url}
mosip.idrepo.identity.url=${mosipbox.public.url}
mosip.idrepo.vid.url=${mosipbox.public.url}
mosip.admin.hotlist.url=${mosipbox.public.url}
mosip.pms.policymanager.url=${mosipbox.public.url}
mosip.pms.partnermanager.url=${mosipbox.public.url}
mosip.idrepo.credrequest.generator.url=${mosipbox.public.url}
mosip.idrepo.credential.service.url=${mosipbox.public.url}
mosip.datashare.url=${mosipbox.public.url}
mosip.mock.biosdk.url=${mosipbox.public.url}
mosip.regproc.workflow.url=${mosipbox.public.url}
mosip.regproc.status.service.url=${mosipbox.public.url}
mosip.regproc.transaction.service.url=${mosipbox.public.url}
mosip.packet.receiver.url=${mosipbox.public.url}
mosip.websub.url=${mosipbox.public.url}
mosip.file.server.url=${mosipbox.public.url}
mosip.ida.internal.url=${mosipbox.public.url}
mosip.ida.auth.url=${mosipbox.public.url}
mosip.ida.otp.url=${mosipbox.public.url}
mosip.resident.url=${mosipbox.public.url}
mosip.digitalcard.service.url=${mosipbox.public.url}
mosip.esignet.service.url=${mosipbox.public.url}

mosip.admin.service.url=${mosipbox.public.url}
mosip.admin.ui.url=${mosipbox.public.url}
mosip.pms.ui.url=${mosipbox.public.url}
mosip.regproc.biosdk.url=${mosipbox.public.url}
mosip.idrepo.biosdk.url=${mosipbox.public.url}
mosip.consolidator.url=${mosipbox.public.url}
mosip.artifactory.url=${mosipbox.public.url}

#object.store.s3.url=https://minio.camdgc-dev1.mosip.net:9000
mosip.idrepo.client.secret=hmFT4IPgOdlBzkg0eucI-g
mosip.creser.client.secret=H7rzxsAtOkOCMNjkK1Gjfw
mosip.crereq.client.secret=hd4pv7_HZDbZ29mwWpfw4Q

# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# override below properties for v2 deployment
# keycloak.external.url
# keycloak.internal.url
# mosip.api.internal.host


aplication.configuration.level.version=LTS

## Idobject validator
# This config is used for loading recommended centers based on the value of the config.
# The value depicts the location hierarchy code of the hierarchy based on which the recommended centers is loaded
mosip.recommended.centers.locCode=5
mosip.esignet-l2.service.url=http://esignet-l2.esignet-l2
kafka.profile=kafka.svc.cluster.local
kafka.port=9092


config.server.file.storage.uri=https://raw.githubusercontent.com/mosip/mosip-config/develop1/

# masterdata field data url
mosip.idobjectvalidator.masterdata.rest.uri=${mosip.kernel.masterdata.url}/v1/masterdata/possiblevalues/{subType}
# Path to IDSchemaVersion. Path is defined as per JsonPath.compile.
mosip.kernel.idobjectvalidator.identity.id-schema-version-path=identity.IDSchemaVersion
# Path to dateOfBirth field. Path is defined as per JsonPath.compile.
mosip.kernel.idobjectvalidator.identity.dob-path = identity.dateOfBirth

# Refresh cache only once for a particular subType for each request, when a value is not found  for that subType. By default, it is false
mosip.idobjectvalidator.refresh-cache-on-unknown-value=false

# Date format expected in identity json. commenting/removing below property will disable dob format validation in identity json.
mosip.kernel.idobjectvalidator.date-format=uuuu/MM/dd
## Properties that need to be updated when Identity Schema has been updated
mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone
mosip.kernel.idobjectvalidator.mandatory-attributes.id-repository.update-uin=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.new-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.child-registration=IDSchemaVersion,UIN,fullName,dateOfBirth|age,gender,addressLine1,region,province,city,zone,postalCode,residenceStatus,referenceIdentityNumber,parentOrGuardianName,parentOrGuardianRID|parentOrGuardianUIN,parentOrGuardianBiometrics
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.other=IDSchemaVersion,UIN
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.lost=IDSchemaVersion
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.biometric_correction=IDSchemaVersion
mosip.kernel.idobjectvalidator.mandatory-attributes.reg-processor.opencrvs_new=IDSchemaVersion
# Value used in IdObjectReferenceValidator when value is not available
mosip.kernel.idobjectvalidator.masterdata.value-not-available=NA

## Bio attribute allowed to be stored in IDRepo as per Identity Schema
mosip.idrepo.identity.allowedBioAttributes=individualBiometrics

## List of all bio attriutes defined in Identity Schema
mosip.idrepo.identity.bioAttributes=individualBiometrics,parentOrGuardianBiometrics

mosip.country.code=MOR

## Language supported by platform
mosip.supported-languages=eng,khm
mosip.right_to_left_orientation=
mosip.left_to_right_orientation=eng,khm

## Application IDs
mosip.prereg.app-id=PRE_REGISTRATION
mosip.reg.app-id=REGISTRATION
mosip.regproc.app-id=REGISTRATION_PROCESSOR
mosip.ida.app-id=IDA
mosip.ida.ref-id=INTERNAL
mosip.idrepo.app-id=ID_REPO

mosip.utc-datetime-pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.sign.header=response-signature
mosip.signed.response.header=response-signature

## CBEFF util
# Cbeff URL where the files will be stored in git, change it accordingly in case of change of storage location.
mosip.kernel.xsdstorage-uri=https://raw.githubusercontent.com/mosip/mosip-config/develop1/
# Cbeff XSD file name in config server
mosip.kernel.xsdfile=mosip-cbeff.xsd

## Applicant type
mosip.kernel.applicant.type.age.limit = 5
mosip.kernel.applicantType.mvel.file=applicanttype.mvel
mosip.kernel.config.server.file.storage.uri=https://raw.githubusercontent.com/mosip/mosip-config/develop1/


## Various length parameters
mosip.kernel.pin.length=6
mosip.kernel.tspid.length=4
mosip.kernel.partnerid.length=4
mosip.kernel.tokenid.length=36
mosip.kernel.registrationcenterid.length=5
mosip.kernel.machineid.length=5

## RID
mosip.kernel.rid.length=29
mosip.kernel.rid.timestamp-length=14
mosip.kernel.rid.sequence-length=5

## PRID
mosip.kernel.prid.length=14
## Upper bound of number of digits in sequence allowed in id. For example if
## limit is 3, then 12 is allowed but 123 is not allowed in id (in both
## ascending and descending order)
mosip.kernel.tokenid.sequence-limit=3
## Upper bound of number of digits in sequence allowed in id. For example if
## limit is 3, then 12 is allowed but 123 is not allowed in id (in both
## ascending and descending order)
## to disable validation assign zero or negative value
mosip.kernel.prid.sequence-limit=3
## Number of digits in repeating block allowed in id. For example if limit is 2,
## then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
## to disable validation assign zero or negative value
mosip.kernel.prid.repeating-block-limit=3
## Lower bound of number of digits allowed in between two repeating digits in
## id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit) to disable validation assign zero or negative value
mosip.kernel.prid.repeating-limit=2
## list of number that id should not be start with to disable null
mosip.kernel.prid.not-start-with=0,1
## restricted numbers for prid
mosip.kernel.prid.restricted-numbers=786,666

## VID
mosip.kernel.vid.length=16
# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 1
mosip.kernel.vid.length.sequence-limit=3
# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
# to disable repeating block validation assign 0 or negative value
mosip.kernel.vid.length.repeating-block-limit=2
# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.vid.length.repeating-limit=2
# list of number that id should not be start with to disable null
mosip.kernel.vid.not-start-with=0,1
mosip.kernel.vid.restricted-numbers=786,666

## UIN
mosip.kernel.uin.length=10
mosip.kernel.uin.min-unused-threshold=200000
mosip.kernel.uin.uins-to-generate=500000
mosip.kernel.uin.restricted-numbers=786,666
# Upper bound of number of digits in sequence allowed in id. For example if
# limit is 3, then 12 is allowed but 123 is not allowed in id (in both
# ascending and descending order)
# to disable sequence limit validation assign 1
mosip.kernel.uin.length.sequence-limit=3
# Number of digits in repeating block allowed in id. For example if limit is 2,
# then 4xxx4 is allowed but 48xxx48 is not allowed in id (x is any digit)
#to disable validation assign zero or negative value
mosip.kernel.uin.length.repeating-block-limit=2
# Lower bound of number of digits allowed in between two repeating digits in
# id. For example if limit is 2, then 11 and 1x1 is not allowed in id (x is any digit)
# to disable repeating limit validation, assign 0  or negative value
mosip.kernel.uin.length.repeating-limit=2
#reverse group digit limit for uin filter
mosip.kernel.uin.length.reverse-digits-limit=5
#group digit limit for uin filter
mosip.kernel.uin.length.digits-limit=5
#should not start with
mosip.kernel.uin.not-start-with=0,1
#adjacent even digit limit for uin filter
mosip.kernel.uin.length.conjugative-even-digits-limit=3

## Auth adapter
auth.server.validate.url=${mosip.kernel.authmanager.url}/v1/authmanager/authorize/admin/validateToken

#This is the frontend url configured in the open-id system. This url should match the issuer attribute in JWT.
auth.server.admin.issuer.internal.uri=${keycloak.internal.url}/auth/realms/
auth.server.admin.issuer.uri=${keycloak.external.url}/auth/realms/
auth-token-generator.rest.issuerUrl=${keycloak.internal.url}/auth/realms/mosip
mosip.keycloak.issuerUrl=${keycloak.internal.url}/auth/realms/mosip

## iam adapter
mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={prereg:'mosip',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip',idrepo:'mosip',hotlist:'mosip',digitalcard:'mosip',signup:'mosip'}
mosip.kernel.auth.appids.realm.map={prereg:'mosip',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip',idrepo:'mosip',hotlist:'mosip',digitalcard:'mosip',signup:'mosip'}

## Crypto
mosip.kernel.crypto.asymmetric-algorithm-name=RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING
mosip.kernel.crypto.symmetric-algorithm-name=AES/GCM/PKCS5Padding
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
mosip.kernel.keygenerator.asymmetric-key-length=2048
mosip.kernel.keygenerator.symmetric-key-length=256
mosip.kernel.data-key-splitter=#KEY_SPLITTER#
mosip.kernel.crypto.gcm-tag-length=128
mosip.kernel.crypto.hash-algorithm-name=PBKDF2WithHmacSHA512
mosip.kernel.crypto.hash-symmetric-key-length=256
mosip.kernel.crypto.hash-iteration=100000
mosip.kernel.crypto.sign-algorithm-name=RS256
mosip.kernel.keymanager-service-publickey-url=${mosip.kernel.keymanager.url}/v1/keymanager/publickey/{applicationId}
mosip.kernel.keymanager-service-decrypt-url=${mosip.kernel.keymanager.url}/v1/keymanager/decrypt
mosip.kernel.keymanager-service-auth-decrypt-url=${mosip.kernel.keymanager.url}/v1/keymanager/auth/decrypt
mosip.kernel.keymanager-service-sign-url=${mosip.kernel.keymanager.url}/v1/keymanager/sign
mosip.kernel.keymanager.cert.url=${mosip.kernel.keymanager.url}/v1/keymanager/getCertificate
mosip.kernel.keymanager-service-CsSign-url=${mosip.kernel.keymanager.url}/v1/keymanager/cssign
mosip.sign.applicationid=KERNEL
mosip.sign.refid=SIGN
mosip.kernel.cryptomanager.request_id=CRYPTOMANAGER.REQUEST
mosip.kernel.cryptomanager.request_version=v1.0
mosip.kernel.signature.signature-request-id=SIGNATURE.REQUEST
mosip.kernel.signature.signature-version-id=v1.0

## ID repo
mosip.idrepo.identity.uin-status.registered=ACTIVATED
mosip.idrepo.identity.uin-status=ACTIVATED,BLOCKED,DEACTIVATED

## OTP manager
mosip.kernel.otp.default-length=6
## Default crypto function: HmacSHA512, HmacSHA256, HmacSHA1.
mosip.kernel.otp.mac-algorithm=HmacSHA512
## OTP expires after the given time (in seconds).
mosip.kernel.otp.expiry-time=180
## Key is frozen for the given time (in seconds).
mosip.kernel.otp.key-freeze-time=1800
## Number of validation attempts allowed.
## mosip.kernel.otp.validation-attempt-threshold =3 means , the validation and generation will be blocked from 4th time.
mosip.kernel.otp.validation-attempt-threshold=10
mosip.kernel.otp.min-key-length=3
mosip.kernel.otp.max-key-length=64

## Licence key manager
mosip.kernel.licensekey.length=16
# List of permissions
## NOTE: ',' in the below list is used as splitter in the implementation.
## Use of ',' in the values for below key should be avoided.
## Use of spaces before and after ',' also should be avoided.
mosip.kernel.licensekey.permissions=OTP Trigger,OTP Authentication,Demo Authentication - Identity Data Match,Demo Authentication - Address Data Match,Demo Authentication - Full Address Data Match,Demo Authentication - Secondary Language Match,Biometric Authentication - FMR Data Match,Biometric Authentication - IIR Data Match,Biometric Authentication - FID Data Match,Static Pin Authentication,eKYC - limited,eKYC - Full,eKYC - No

## Virus scanner
# Here we specify the Kubernetes service name if clamav runs inside cluster
mosip.kernel.virus-scanner.host=clamav.clamav
mosip.kernel.virus-scanner.port=3310

## Transliteration
mosip.kernel.transliteration.arabic-language-code=ara
mosip.kernel.transliteration.english-language-code=eng
mosip.kernel.transliteration.french-language-code=fra

## DOB
mosip.default.dob.month=01
mosip.default.dob.day=01
mosip.login.mode= email,mobile

## Notification
mosip.registration.processor.notification.types=EMAIL
mosip.notificationtype=SMS|EMAIL
mosip.kernel.sms.proxy-sms=false
mosip.kernel.auth.proxy-otp=true
mosip.kernel.auth.proxy-email=true
## Notification lanugage types: either PRIMARY or BOTH
mosip.notification.language-type=BOTH

## Admin
mosip.min-digit-longitude-latitude=4
mosip.kernel.filtervalue.max_columns=20
auth.server.admin.validate.url=${mosip.kernel.authmanager.url}/v1/authmanager/authorize/admin/validateToken

## PDF generation. TODO: this password must be passed as config server env variable
mosip.kernel.pdf_owner_password=abc123

## Quality check treshold
mosip.iris_threshold=0
mosip.leftslap_fingerprint_threshold=0
mosip.rightslap_fingerprint_threshold=0
mosip.thumbs_fingerprint_threshold=0
mosip.facequalitythreshold=0

## Bio SDK Integration
mosip.fingerprint.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.face.provider=io.mosip.kernel.bioapi.impl.BioApiImpl
mosip.iris.provider=io.mosip.kernel.bioapi.impl.BioApiImpl

## UIN alias
mosip.uin.alias=

## Kernel salt generator
mosip.kernel.salt-generator.chunk-size=10
mosip.kernel.salt-generator.start-sequence=0
mosip.kernel.salt-generator.end-sequence=999

## HTTP
server.max-http-header-size=10000000


## Prometheus
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

mosip.kernel.syncdata-service-idschema-url=${mosip.kernel.masterdata.url}/v1/masterdata/idschema/latest
mosip.kernel.syncdata-service-dynamicfield-url=${mosip.kernel.masterdata.url}/v1/masterdata/dynamicfields
mosip.kernel.syncdata-service-get-tpm-publicKey-url=${mosip.kernel.syncdata.url}/v1/syncdata/tpm/publickey/
mosip.kernel.keymanager-service-validate-url=${mosip.kernel.keymanager.url}/v1/keymanager/validate
mosip.kernel.keymanager-service-csverifysign-url=${mosip.kernel.keymanager.url}/v1/keymanager/csverifysign

## GPS
mosip.registration.gps_device_enable_flag=n

## Packet manager
## if source is not passed, packetmanager supports below default strategy -
## 1. 'exception' : it will throw exception.
## 2. 'defaultPriority' : use default priority packetmanager.default.priority.
packetmanager.default.read.strategy=defaultPriority
packetmanager.default.priority=source:REGISTRATION_CLIENT\/process:BIOMETRIC_CORRECTION|NEW|UPDATE|LOST,source:RESIDENT\/process:ACTIVATED|DEACTIVATED|RES_UPDATE|RES_REPRINT,source:OPENCRVS\/process:OPENCRVS_NEW
packetmanager.name.source={default:'REGISTRATION_CLIENT',resident:'RESIDENT',opencrvs:'OPENCRVS'}
packetmanager.packet.signature.disable-verification=true
mosip.commons.packetnames=id,evidence,optional
provider.packetreader.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|BIOMETRIC_CORRECTION,classname:io.mosip.commons.packet.impl.PacketReaderImpl
provider.packetreader.resident=source:RESIDENT,process:ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketReaderImpl
provider.packetreader.opencrvs=source:OPENCRVS,process:OPENCRVS_NEW,classname:io.mosip.commons.packet.impl.PacketReaderImpl
provider.packetwriter.mosip=source:REGISTRATION_CLIENT,process:NEW|UPDATE|LOST|BIOMETRIC_CORRECTION,classname:io.mosip.commons.packet.impl.PacketWriterImpl
provider.packetwriter.resident=source:RESIDENT,process:ACTIVATED|DEACTIVATED|RES_UPDATE|LOST|RES_REPRINT,classname:io.mosip.commons.packet.impl.PacketWriterImpl
provider.packetwriter.opencrvs=source:OPENCRVS,process:OPENCRVS_NEW,classname:io.mosip.commons.packet.impl.PacketWriterImpl
objectstore.adapter.name=S3Adapter
## When we use AWS as an object store, we see that buckets with the same name across deployments cannot be created.so use the prefix with bucket name
object.store.s3.bucket-name-prefix=${s3.pretext.value:}
# the idschema is double by default. If country wish to change it to string then make this property false
mosip.commons.packet.manager.schema.validator.convertIdSchemaToDouble=true
## can be OnlinePacketCryptoServiceImpl OR OfflinePacketCryptoServiceImpl
objectstore.crypto.name=OnlinePacketCryptoServiceImpl
default.provider.version=v1.0
## posix adapter config
object.store.base.location=/home/mosip
hazelcast.config=classpath:hazelcast_default.xml



## Swift
object.store.swift.username=test
object.store.swift.password=test
object.store.swift.url=http://localhost:8080

packet.manager.account.name=${s3.pretext.value:}packet-manager
CRYPTOMANAGER_DECRYPT=${mosip.kernel.keymanager.url}/v1/keymanager/decrypt
CRYPTOMANAGER_ENCRYPT=${mosip.kernel.keymanager.url}/v1/keymanager/encrypt
IDSCHEMAURL=${mosip.kernel.masterdata.url}/v1/masterdata/idschema/latest
KEYMANAGER_SIGN=${mosip.kernel.keymanager.url}/v1/keymanager/sign
AUDIT_URL=${mosip.kernel.auditmanager.url}/v1/auditmanager/audits
packet.default.source=id
schema.default.fieldCategory=pvt,none

## Device registration/deregistration config
mosip.stage.environment=Developer

## Log level

logging.level.io.mosip=DEBUG
logging.level.io.vertx=INFO
logging.level.io.mosip.registration.processor.status=DEBUG
logging.level.io.mosip.kernel.auth.defaultadapter.filter=DEBUG

## Tomcat access logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/dev
server.tomcat.accesslog.prefix=stdout
server.tomcat.accesslog.buffered=false
server.tomcat.accesslog.suffix=
server.tomcat.accesslog.file-date-format=
server.tomcat.accesslog.pattern={"@timestamp":"%{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}t","level":"ACCESS","level_value":70000,"traceId":"%{X-B3-TraceId}i","statusCode":%s,"req.requestURI":"%U","bytesSent":%b,"timeTaken":%T,"appName":"${spring.application.name}","req.userAgent":"%{User-Agent}i","req.xForwardedFor":"%{X-Forwarded-For}i","req.referer":"%{Referer}i","req.method":"%m","req.remoteHost":"%a"}
server.tomcat.accesslog.className=io.mosip.kernel.core.logger.config.SleuthValve

## Websub (internal url)
websub.hub.url=${mosip.websub.url}/hub/
websub.publish.url=${mosip.websub.url}/hub/

mosip.mandatory-languages=eng,khm
## Leave blank if no optional langauges
mosip.optional-languages=
mosip.min-languages.count=2
mosip.max-languages.count=2

# These are default languages used for sending notifications
mosip.default.template-languages=eng,khm

# Config key to pick the preferred language for communicating to the Resident
mosip.default.user-preferred-language-attribute=preferredLang

# Path to identity mapping json file
mosip.identity.mapping-file=${mosip.kernel.xsdstorage-uri}/identity-mapping.json

mosip.notification.timezone=GMT+05:30

# registration center type validation regex, used to restrict the special charecter
mosip.centertypecode.validate.regex=^[a-zA-Z0-9]([_-](?![_-])|[a-zA-Z0-9]){0,34}[a-zA-Z0-9]$

## Swagger
openapi.service.servers[0].url=${mosip.api.internal.url}${server.servlet.context-path:${server.servlet.path:}}
openapi.service.servers[0].description=For Swagger

mosip.auth.filter_disable=false

# PDF Digital card is protected with password using below property based on define attribute it will encrypt by taking first 4 character.
mosip.digitalcard.uincard.password=fullName|dateOfBirth
mosip.digitalcard.pdf.password.enable.flag=true

# Web UI Idle timeout related properties
mosip.webui.auto.logout.idle=180
mosip.webui.auto.logout.ping=30
mosip.webui.auto.logout.timeout=60

mosip.access_token.subject.claim-name=sub

# It is used as a suffix for creating credential request ID using the RID.
mosip.registration.processor.rid.delimiter=-PDF

# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password
# mosip.crereq.client.secret
# mosip.creser.client.secret
# mosip.regproc.client.secret
# mosip.kernel.tokenid.uin.salt
# mosip.kernel.tokenid.partnercode.salt
# idrepo.websub.vid.credential.update.secret
# keycloak.internal.url
# s3.accesskey
# s3.region
# s3.secretkey

management.endpoint.restart.enabled=true

# Database hostname below is assuming postgres is running inside cluster in 'postgres' namespace
# If database is external to production, provide the DNS or ip of the host and port
mosip.idrepo.db.port=5433
mosip.idrepo.db.identity.db-name=mosip_idrepo
mosip.idrepo.db.identity.username=postgres
mosip.idrepo.db.identity.password=${db.dbuser.password}
mosip.idrepo.db.vid.db-name=mosip_idmap
mosip.idrepo.db.vid.username=postgres
mosip.idrepo.db.vid.password=${db.dbuser.password}
mosip.idrepo.objectstore.account-name=idrepo
mosip.idrepo.objectstore.bucket-name=idrepo
mosip.idrepo.objectstore.adapter-name=s3Adapter

#IDRepo identity/vid service authentication details
mosip.idrepo.auth.client-id=mosip-idrepo-client
mosip.idrepo.auth.secret-key=${mosip.idrepo.client.secret}
mosip.idrepo.auth.app-id=idrepo

# For auditing
mosip.idrepo.application.name=ID-Repository
mosip.idrepo.application.version.pattern=^v\\d+(\\.\\d+)?$
# Configuration for +/- time period adjustment in minutes for the request time validation, so that
#the requests originating from a system that is not in time-sync will be accepted for the time period
mosip.idrepo.datetime.future-time-adjustment=2
# Reference IDs of base keys used for encryption/decryption
mosip.idrepo.crypto.refId.uin=uin
mosip.idrepo.crypto.refId.uin-data=identity_data
mosip.idrepo.crypto.refId.demo-doc-data=demographic_data
mosip.idrepo.crypto.refId.bio-doc-data=biometric_data


# Limit the number of async threads created in IDRepo services. This count is divided into 4 thread groups configured in IdRepoConfig.class
mosip.idrepo.active-async-thread-count=100

# Logging of thread queue done based on below value in ms. Logging is done only if queue value of any one thread group crosses below specified threshold.
mosip.idrepo.monitor-thread-queue-in-ms=600000
mosip.idrepo.max-thread-queue-threshold=100

## Kernel retry
# The retry limit excluding the first attempt before attempting for retries. Default is set to 5.
kernel.retry.attempts.limit=5
# The initial interval to be used for exponential backoff in milli seconds. If the exponential backoff is disabled by setting 'kernel.retry.exponential.backoff.multiplier' value as 1, this initial interval will be used as the fixed backoff interval for every retries. Default value is 200 millisecs
kernel.retry.exponential.backoff.initial.interval.millisecs=100
# The multiplier for exponential backoff intreval. A double value greater than or equal to 1. Setting to 1 will make it to fixed backoff, more than 1 will apply exponential backoff. Default is 1.0 (fixed backoff). For exponential backoff the suggested value is 1.5 or 2. The next backoff interval is calculated with the formula: NextBackOffInterval = initialInterval * Math.pow(multiplier, retryCount)
kernel.retry.exponential.backoff.multiplier=1.5
kernel.retry.exponential.backoff.max.interval.millisecs=1000
# Whether to traverse to the root cause exception from the exception thrown and use the same root cause to decide whether to retry or not. Default is true.
kernel.retry.traverse.root.cause.enabled=false
#Comma separated List of fully qualified Exceptions which are retryable (inclusion list). Their subclasses will also be considered in the evaluation.
kernel.retry.retryable.exceptions=io.mosip.idrepository.core.exception.IdRepoRetryException
#Comma separated List of fully qualified Exceptions which are not-retryable (exclusion list). Their subclasses will also be considered in the evaluation.
kernel.retry.nonretryable.exceptions=

## Identity service
# Application version expected in the request
mosip.idrepo.identity.application.version=v1
# Application ids expected in the requests
mosip.idrepo.identity.id.create=mosip.id.create
mosip.idrepo.identity.id.read=mosip.id.read
mosip.idrepo.identity.id.update=mosip.id.update
#database mappings for identity service
mosip.idrepo.identity.db.url=jdbc:postgresql://${mosip.idrepo.db.url}:${mosip.idrepo.db.port}/${mosip.idrepo.db.identity.db-name}
mosip.idrepo.identity.db.username=${mosip.idrepo.db.identity.username}
mosip.idrepo.identity.db.password=${mosip.idrepo.db.identity.password}
mosip.idrepo.identity.db.driverClassName=org.postgresql.Driver
# Path of UIN expected in the input idrepo request. This path is based on Identity schema.
mosip.idrepo.identity.json.path=identity.UIN
# UIN status value which is stored in database for newly inserted UIN/active UINs.
# List of allowed UIN status in ID-Repo
# idobjectvalidator
# Class name of the referenceValidator. Commenting or removing this property will disable reference validator.
mosip.kernel.idobjectvalidator.referenceValidator=io.mosip.kernel.idobjectvalidator.impl.IdObjectReferenceValidator

# VID
# Application version expected in the request
mosip.idrepo.vid.application.version=v1
# Application ids expected in the requests
mosip.idrepo.vid.id.create=mosip.vid.create
mosip.idrepo.vid.id.read=mosip.vid.read
mosip.idrepo.vid.id.update=mosip.vid.update
mosip.idrepo.vid.id.regenerate=mosip.vid.regenerate
mosip.idrepo.vid.id.reactivate=mosip.vid.reactivate
mosip.idrepo.vid.id.deactivate=mosip.vid.deactivate
# Database mapping for VID service
mosip.idrepo.vid.db.url=jdbc:postgresql://${mosip.idrepo.db.url}:${mosip.idrepo.db.port}/${mosip.idrepo.db.vid.db-name}
mosip.idrepo.vid.db.username=${mosip.idrepo.db.vid.username}
mosip.idrepo.vid.db.password=${mosip.idrepo.db.vid.password}
mosip.idrepo.vid.db.driverClassName=org.postgresql.Driver
# VID status value which is stored in database for newly inserted VID/active VIDs.
mosip.idrepo.vid.active-status=ACTIVE
# VID status for which unlimited txn is not allowed
mosip.idrepo.vid.unlimited-txn-status=USED
# VID status which are allowed for VID regeneration
mosip.idrepo.vid.regenerate.allowed-status=ACTIVE,REVOKED,EXPIRED,USED
# List of allowed VID status in ID-Repo
mosip.idrepo.vid.allowedstatus=ACTIVE,REVOKED,EXPIRED,USED,INVALIDATED,DEACTIVATED
# VID status value which is stored in database for deactivated VIDs. Used in deactivate-all-vids api.
mosip.idrepo.vid.deactive-status=DEACTIVATED
# VID status value which is stored in database for reactivated VIDs. Used in reactivate-all-vids api.
mosip.idrepo.vid.reactive-status=ACTIVE

#RID
# Application version expected in the request
mosip.idrepo.rid.get.version=1.0
# Application ids expected in the requests
mosip.idrepo.rid.get.id=mosip.idrepo.rid.get

# Config server url
mosip.idrepo.mosip-config-url=https://raw.githubusercontent.com/mosip/mosip-config/develop1/
# VID policy schema against which VID policy is validated
mosip.idrepo.vid.policy-schema-url=${mosip.idrepo.mosip-config-url}mosip-vid-policy-schema.json
# VID policy based on which VID is created
mosip.idrepo.vid.policy-file-url=${mosip.idrepo.mosip-config-url}mosip-vid-policy.json

# Default type of VID to be created automatically while publishing UIN
mosip.idrepo.draft-vid.default-type-to-create=PERPETUAL

## Rest servies
mosip.idrepo.audit.rest.uri=${mosip.kernel.auditmanager.url}/v1/auditmanager/audits
mosip.idrepo.audit.rest.httpMethod=POST
mosip.idrepo.audit.rest.headers.mediaType=application/json

mosip.idrepo.encryptor.rest.uri=${mosip.kernel.keymanager.url}/v1/keymanager/encrypt
mosip.idrepo.encryptor.rest.httpMethod=POST
mosip.idrepo.encryptor.rest.headers.mediaType=application/json
mosip.idrepo.encryptor.rest.timeout=100

mosip.idrepo.decryptor.rest.uri=${mosip.kernel.keymanager.url}/v1/keymanager/decrypt
mosip.idrepo.decryptor.rest.httpMethod=POST
mosip.idrepo.decryptor.rest.headers.mediaType=application/json
mosip.idrepo.decryptor.rest.timeout=100

mosip.idrepo.vid-service.rest.uri=${mosip.idrepo.vid.url}/idrepository/v1/vid/uin/{uin}
mosip.idrepo.vid-service.rest.httpMethod=GET
mosip.idrepo.vid-service.rest.headers.mediaType=application/json
mosip.idrepo.vid-service.rest.timeout=100

mosip.idrepo.retrieve-uin-by-vid.rest.uri=${mosip.idrepo.vid.url}/idrepository/v1/vid/{vid}
mosip.idrepo.retrieve-uin-by-vid.rest.httpMethod=GET
mosip.idrepo.retrieve-uin-by-vid.rest.headers.mediaType=application/json
mosip.idrepo.retrieve-uin-by-vid.rest.timeout=100

# in minutes
mosip.iam.adapter.validate-expiry-check-rate=15
# in minutes
mosip.iam.adapter.renewal-before-expiry-interval=15
#this should be false if you don?t use the self token restTemplate from auth adapter true if you do (needed for websubclient).
mosip.iam.adapter.self-token-renewal-enable=true
mosip.idrepo.bio-extractor-service.rest.uri=${mosip.mock.biosdk.url}/biosdk-service/{extractionFormat}/extracttemplates
mosip.idrepo.bio-extractor-service.rest.httpMethod=POST
mosip.idrepo.bio-extractor-service.rest.headers.mediaType=application/json
mosip.idrepo.bio-extractor-service.rest.timeout=100
logging.level.org.springframework.web.client.RestTemplate=DEBUG

mosip.idrepo.syncdata-service.rest.uri=${mosip.kernel.masterdata.url}/v1/masterdata/idschema/latest
mosip.idrepo.syncdata-service.rest.httpMethod=GET
mosip.idrepo.syncdata-service.rest.headers.mediaType=application/json
mosip.idrepo.syncdata-service.rest.timeout=100

mosip.idrepo.pmp.partner.rest.uri=${mosip.pms.partnermanager.url}/v1/partnermanager/partners?partnerType=Online_Verification_Partner
mosip.idrepo.pmp.partner.rest.httpMethod=GET
mosip.idrepo.pmp.partner.rest.headers.mediaType=application/json
mosip.idrepo.pmp.partner.rest.timeout=100

mosip.idrepo.credential.request.rest.uri=${mosip.idrepo.credrequest.generator.url}/v1/credentialrequest/requestgenerator
mosip.idrepo.credential.request.rest.httpMethod=POST
mosip.idrepo.credential.request.rest.headers.mediaType=application/json
mosip.idrepo.credential.request.rest.timeout=100

mosip.idrepo.credential.cancel-request.rest.uri=${mosip.idrepo.credrequest.generator.url}/v1/credentialrequest/cancel/{requestId}
mosip.idrepo.credential.cancel-request.rest.httpMethod=GET
mosip.idrepo.credential.cancel-request.rest.headers.mediaType=application/json
mosip.idrepo.credential.cancel-request.rest.timeout=100

## Credential status job
# Fixed delay time after which job will be triggered again to process the created/updated credential details.
mosip.idrepo.credential-status-update-job.fixed-delay-in-ms=10000

# Dummy partner id used to create a credential request record in credential_request_status.
# Credential won't be issued for the below provided. id-repository-credential-feeder will utilize
# the credential request with below partner id to issue credential to new IDA partners.
idrepo-dummy-online-verification-partner-id=MOVP

mosip.idrepo.retrieve-by-uin.rest.uri=${mosip.idrepo.identity.url}/idrepository/v1/identity/idvid/{uin}
mosip.idrepo.retrieve-by-uin.rest.httpMethod=GET
mosip.idrepo.retrieve-by-uin.rest.headers.mediaType=application/json
mosip.idrepo.retrieve-by-uin.rest.timeout=100

mosip.idrepo.vid-generator.rest.uri=${mosip.kernel.idgenerator.url}/v1/idgenerator/vid
mosip.idrepo.vid-generator.rest.httpMethod=GET
mosip.idrepo.vid-generator.rest.headers.mediaType=application/json
mosip.idrepo.vid-generator.rest.timeout=100

## Websub
mosip.idrepo.websub.vid-credential-update.callback-url=https://5857-152-59-24-47.ngrok-free.app/idrepository/v1/identity/callback/vid_credential_status_update
mosip.idrepo.websub.vid-credential-update.topic=VID_CRED_STATUS_UPDATE
mosip.idrepo.websub.vid-credential-update.secret= ${idrepo.websub.vid.credential.update.secret}
mosip.idrepo.websub.credential-status-update.topic=CREDENTIAL_STATUS_UPDATE
mosip.idrepo.websub.remove-id-status.topic=REMOVE_ID_STATUS
mosip.idrepo.websub.remove-id-status.secret=${idrepo.websub.remove.id.status.secret}
idrepo.websub.callback.remove-id-status.relative.url=/idrepository/v1/identity/callback/remove_id_status
mosip.idrepo.websub.remove-id-status.callback-url=https://5857-152-59-24-47.ngrok-free.app/idrepository/v1/identity/callback/remove_id_status

## Auth adapter
mosip.iam.adapter.clientid.id-repository=${mosip.idrepo.auth.client-id}
mosip.iam.adapter.clientsecret.id-repository=${mosip.idrepo.auth.secret-key}
mosip.iam.adapter.appid.id-repository=${mosip.idrepo.auth.app-id}
mosip.authmanager.client-token-endpoint=${mosip.kernel.authmanager.url}/v1/authmanager/authenticate/clientidsecretkey

mosip.idrepo.uin-generator.rest.uri=${mosip.kernel.idgenerator.url}/v1/idgenerator/uin
mosip.idrepo.uin-generator.rest.httpMethod=GET
mosip.idrepo.uin-generator.rest.headers.mediaType=application/json
mosip.idrepo.uin-generator.rest.timeout=100

mosip.idrepo.draft-vid.rest.uri=${mosip.idrepo.vid.url}/idrepository/v1/draft/vid
mosip.idrepo.draft-vid.rest.httpMethod=POST
mosip.idrepo.draft-vid.rest.headers.mediaType=application/json
mosip.idrepo.draft-vid.rest.timeout=100

mosip.idrepo.update-vid.rest.uri=${mosip.idrepo.vid.url}/idrepository/v1/vid/{vid}
mosip.idrepo.update-vid.rest.httpMethod=PATCH
mosip.idrepo.update-vid.rest.headers.mediaType=application/json
mosip.idrepo.update-vid.rest.timeout=100

## Credential request generator
mosip.credential.service.database.port=5432

mosip.credential.service.jdbc.url=jdbc:postgresql://${mosip.credential.service.database.hostname}:${mosip.credential.service.database.port}/mosip_credential?currentSchema=credential
mosip.credential.service.jdbc.user=postgres
mosip.credential.service.jdbc.password=${db.dbuser.password}
mosip.credential.service.jdbc.driver=org.postgresql.Driver
# Token generator properties
credential.request.token.request.appid=${mosip.idrepo.credential-req-generator.auth.app-id}
credential.request.token.request.clientId=${mosip.idrepo.credential-req-generator.auth.client-id}
credential.request.token.request.secretKey=${mosip.idrepo.credential-req-generator.auth.secret-key}
credential.request.token.request.version=1.0
credential.request.token.request.id=io.mosip.credentialrequestgenerator
credential.request.token.request.issuerUrl=${keycloak.internal.url}/auth/realms/mosip
mosip.credential.request.service.id=mosip.credential.request.generator
mosip.credential.request.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.credential.request.service.version=1.0

# Reference Id which is used for encryption/decryption of credential request using keymanager
mosip.credential.request.crypto-ref-id=credential_request

## Batch job
# batch job time intervel in miliseconds
mosip.credential.request.job.timedelay=5000
#Reprocessing job timeintervel in miliseconds
mosip.credential.request.reprocess.job.timedelay=1200000
credential.request.type=auth
credential.request.retry.max.count=10
credential.request.reprocess.statuscodes=FAILED,RETRY
credential.batch.page.size=100
credential.request.process.locktimeout=60000
credential.request.reprocess.locktimeout=60000
credential.batch.status=NEW

## Rest services
CRDENTIALSERVICE=${mosip.idrepo.credential.service.url}/v1/credentialservice/issue
KEYBASEDTOKENAPI=${mosip.kernel.authmanager.url}/v1/authmanager/authenticate/clientidsecretkey
CALLBACKURL=https://5857-152-59-24-47.ngrok-free.app/v1/credentialrequest/callback/notifyStatus
ENCRYPTION=${mosip.idrepo.encryptor.rest.uri}
DECRYPTION=${mosip.idrepo.decryptor.rest.uri}

# Websub
#Delay (in milliseconds) for subscription on application startup to avoid failure during intent verification by hub.
subscription-delay-secs=120000
# The time interval in seconds to schedule subscription of topics which is done as a
# work-around , By default the
# this property value is set to 0 that disables this workaround.
# To enable the resubscrition scheduling, this property should be assigned with a positive
# number like 1 * 60 * 60 = 3600 for one hour
resubscription-delay-secs=43200
WEBSUBSECRET=test

# Credential service
credential.service.token.request.appid=${mosip.idrepo.credential.auth.app-id}
credential.service.token.request.clientId=${mosip.idrepo.credential.auth.client-id}
credential.service.token.request.secretKey=${mosip.creser.client.secret}
credential.service.token.request.id=io.mosip.credentialstore
# Credential formatter properties
mosip.credential.vc.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss'Z'
mosip.credential.service.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
mosip.credential.service.service.id=mosip.credential.store
mosip.credential.service.service.version=1.0
credential.service.credentialtype.file=CredentialType.json
credential.service.mvel.file=credentialdata.mvel
credential.service.dob.format=yyyy/MM/dd
mosip.credential.service.credential.schema=MOSIPVerifiableCredential
mosip.credential.service.type.name=mosip
mosip.credential.service.type.namespace=mosip
credentialType.formatter.AUTH=IdAuthProvider
credentialType.formatter.QRCODE=QrCodeProvider
credentialType.formatter.MOSIP=CredentialProvider
credentialType.formatter.EUIN=QrCodeProvider
credentialType.formatter.REPRINT=QrCodeProvider
credentialType.formatter.EUIN_WITH_QR=QrCodeProvider
credentialType.formatter.EUIN_WITH_FACEQR=QrCodeProvider
mosip.credential.service.format.id=http://mosip.io/credentials/
mosip.credential.service.format.issuer=https://mosip.io/issuers/
mosip.credential.service.application.id=PARTNER
mosip.credential.service.includeCertificateHash=true
mosip.credential.service.includeCertificate=true
mosip.credential.service.includePayload=false
mosip.credential.service.share.prependThumbprint=false
mosip.credential.service.retry.maxAttempts=3
mosip.credential.service.retry.maxDelay=100

IDREPOGETIDBYID=${mosip.idrepo.identity.url}/idrepository/v1/identity/idvid
mosip.data.share.protocol=http
mosip.data.share.internal.domain.name=datashare.datashare
CREATEDATASHARE=/v1/datashare/create
KEYMANAGER_JWTSIGN=${mosip.kernel.keymanager.url}/v1/keymanager/jwtSign
KEYMANAGER_ENCRYPT_PIN=${mosip.kernel.keymanager.url}/v1/keymanager/encryptWithPin
KEYMANAGER_ENCRYPT_ZK=${mosip.kernel.keymanager.url}/v1/keymanager/zkEncrypt
PARTNER_POLICY=${mosip.pms.partnermanager.url}/v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies
PARTNER_EXTRACTION_POLICY=${mosip.pms.partnermanager.url}/v1/partnermanager/partners/{partnerId}/bioextractors/{policyId}
credential.service.token.request.issuerUrl=${keycloak.internal.url}/auth/realms/mosip

# Credential issuance Event properties
id-repo-ida-event-type-namespace=mosip
id-repo-ida-event-type-name=ida
id-repo-ida-credential-type=auth
id-repo-ida-credential-recepiant=IDA

# Kernel token ID generator properties
mosip.kernel.tokenid.uin.salt=${mosip.kernel.uin.salt}
mosip.kernel.tokenid.partnercode.salt=${mosip.kernel.partnercode.salt}

# Enabling below property will start logging performance logs in identity and vid service
mosip.idrepo.aspect-logging.enabled=false

auth.server.admin.allowed.audience=mosip-regproc-client,mosip-prereg-client,mosip-admin-client,mosip-crereq-client,mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-resident-client,mosip-reg-client,mpartner-default-print,mosip-idrepo-client,mpartner-default-auth,mosip-syncdata-client,mosip-masterdata-client,mosip-idrepo-client,mosip-pms-client,mosip-hotlist-client,opencrvs-partner,mpartner-default-digitalcard,mosip-signup-client
#openapi properties to sort tag and operations of id-repository services
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha

# Object store
object.store.s3.accesskey=${s3.accesskey}
object.store.s3.secretkey=${s3.secretkey}
## For Minio: object.store.s3.url=http://minio.minio:9000
## For AWS: object.store.s3.url=s3.${s3.region}.amazonaws.com
object.store.s3.url=https://minio.dev2.mosip.net
object.store.s3.region=${s3.region}
object.store.s3.readlimit=10000000

# Roles
mosip.role.idrepo.credentialrequest.postrequestgenerator=CREDENTIAL_REQUEST,ID_REPOSITORY
mosip.role.idrepo.credentialrequest.getcancelrequestid=CREDENTIAL_REQUEST,ID_REPOSITORY
mosip.role.idrepo.credentialrequest.getgetrequestid=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.getgetrequestids=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialrequest.putretriggerrequestid=CREDENTIAL_REQUEST
mosip.role.idrepo.credentialservice.postissue=CREDENTIAL_REQUEST
mosip.role.idrepo.identity.postidrepo=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.postidrepov2=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.getidvidid=REGISTRATION_PROCESSOR,RESIDENT,REGISTRATION_ADMIN,REGISTRATION_SUPERVISOR,REGISTRATION_OFFICER,ID_AUTHENTICATION,ID_REPOSITORY
mosip.role.idrepo.identity.postidvidid=REGISTRATION_PROCESSOR,RESIDENT,REGISTRATION_ADMIN,REGISTRATION_SUPERVISOR,REGISTRATION_OFFICER,ID_AUTHENTICATION,ID_REPOSITORY
mosip.role.idrepo.identity.patchidrepo=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.patchidrepov2=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.getauthtypesstatusindividualidtypeindividualid=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.identity.postauthtypesstatus=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.identity.postdraftcreateregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.patchdraftupdateregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.getdraftpublishregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.deletedraftdiscardregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.draftregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.getdraftregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.putdraftextractbiometricsregistrationId=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.identity.remainingUpdateCountByIndividualId=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.identity.getRidByIndividualId=RESIDENT,ID_REPOSITORY,REGISTRATION_PROCESSOR
mosip.role.idrepo.vid.postvid=RESIDENT,REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.role.idrepo.vid.getvid=REGISTRATION_PROCESSOR,ID_AUTHENTICATION,RESIDENT,ID_REPOSITORY
mosip.role.idrepo.vid.getviduin=REGISTRATION_PROCESSOR,ID_REPOSITORY,RESIDENT
mosip.role.idrepo.vid.patchvid=ID_AUTHENTICATION,REGISTRATION_PROCESSOR,RESIDENT,ID_REPOSITORY
mosip.role.idrepo.vid.postvidregenerate=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.vid.postviddeactivate=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.vid.postvidreactivate=RESIDENT,ID_REPOSITORY
mosip.role.idrepo.vid.postdraftvid=REGISTRATION_PROCESSOR,ID_REPOSITORY
mosip.mask.function.identityAttributes=convertToMaskData
mosip.role.idrepo.credentialrequest.postv2requestgeneratorrid=CREDENTIAL_REQUEST,ID_REPOSITORY

mosip.idrepo.credential.request.enable-convention-based-id=true
mosip.idrepo.credential-request-v2.rest.uri=${mosip.idrepo.credrequest.generator.url}/v1/credentialrequest/v2/requestgenerator/{rid}
mosip.idrepo.credential-request-v2.rest.httpMethod=POST
mosip.idrepo.credential-request-v2.rest.headers.mediaType=application/json
mosip.idrepo.credential-request-v2.rest.timeout=100

mosip.idrepo.identity.disable-uin-based-credential-request=false
##mosip.identity.fieldid.handle-postfix.mapping={'phone':'@phone'}
mosip.identity.fieldid.handle-postfix.mapping={:}

auth.types.allowed=demo,otp,bio-Finger,bio-Iris,bio-Face


#cache configurations
mosip.idrepo.cache.names=credential_transaction,partner_extractor_formats,datashare_policies,topics,online_verification_partners,uin_encrypt_salt,uin_hash_salt,id_attributes
spring.cache.cache-names=${mosip.idrepo.cache.names}
spring.cache.type=simple
mosip.idrepo.cache.size={'credential_transaction' : 200, \
'partner_extractor_formats': 200, \
'datashare_policies': 200, \
'topics': 200, \
'online_verification_partners': 200, \
'uin_encrypt_salt' : 100, \
'uin_hash_salt': 100 , \
'id_attributes': 200 }

# Cache expire in seconds is applicable for both 'simple' and 'Redis' cache type
mosip.idrepo.cache.expire-in-seconds={'credential_transaction' : 86400, \
'partner_extractor_formats': 86400,\
'datashare_policies': 86400, \
'topics': 86400, \
'online_verification_partners': 86400, \
'uin_encrypt_salt' : 86400, \
'uin_hash_salt': 86400, \
'id_attributes': 86400}

management.health.redis.enabled=false
mosip.idrepo.identity.max-request-time-deviation-seconds=1000
mosip.idrepo.update-identity.fields-to-replace={"selectedHandles","phone"}
mosip.idrepo.verified-attributes.schema-url=${config.server.file.storage.uri}VerifiedAttributes.json

mosip.idrepo.verification-metadata.unique-fields={"trust_framework","verification_process"}